# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: auto

on:
  schedule:
    - cron:  '0 0 * * *'
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: "SSH connection to Actions"
        required: false
        default: "false"
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
permissions:
  actions: read
jobs:

  probe-self-hosted:
    name:  Probe Self-hosted Runner
    runs-on: ubuntu-latest
    outputs:
      self_hosted_available: ${{ steps.inspect.outputs.available }}
    steps:
      - name: Check token length
        run: echo "${{ secrets.RUNNER_ADMIN_TOKEN }}" | wc -c
      - name: Inspect self-hosted pool
        id: inspect
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.RUNNER_ADMIN_TOKEN }}
          script: |
            const { data } = await github.rest.actions.listSelfHostedRunnersForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100,
            });
            const availableRunner = data.runners?.find(runner => runner.status === 'online' && !runner.busy);
            const available = Boolean(availableRunner);
            core.info(available ? `Found available runner: ${availableRunner.name}` : 'No idle self-hosted runners online.');
            core.setOutput('available', available ? 'true' : 'false');
  
  build-on-github:
    name: Fallback Build on GitHub-hosted
    needs: probe-self-hosted # 依赖于探针
    if: ${{ needs.probe-self-hosted.outputs.self_hosted_available != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          # architecture: aarch64
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew jar
      - name: run application
        run: java -jar build/libs/wallpaper-1.0-SNAPSHOT.jar
      - name: Commit file to github
        run: |
          git config --local user.email "gsdukbh@gmail.com"
          git config --local user.name "JiaWei Lee"
          git add images/4k_**
          git add images/bing_**
          git add index.txt
          git add *.json
          git add *.md
          git add *.db
          git add archive/*.md
          git commit -m "auto update wallpaper"
      - name: Push changes
        uses: ad-m/github-push-action@master
  build-on-self-hosted:
    name:  Build on self-hosted
    needs: probe-self-hosted # 依赖于探针
    # 条件：仅当探针 Job 成功时才运行
    if: ${{ needs.probe-self-hosted.outputs.self_hosted_available == 'true' }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          # architecture: aarch64
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew jar
      - name: run application
        run: java -jar build/libs/wallpaper-1.0-SNAPSHOT.jar
      - name: Commit file to github
        run: |
          git config --local user.email "gsdukbh@gmail.com"
          git config --local user.name "JiaWei Lee"
          git add images/4k_**
          git add images/bing_**
          git add index.txt
          git add *.json
          git add *.md
          git add *.db
          git add archive/*.md
          git commit -m "auto update wallpaper"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.MY_GIT_TOKEN }}
          branch: main
  fallback-on-self-hosted-failure:
    name: GitHub-hosted Fallback After Self-hosted Failure
    needs:
      - probe-self-hosted
      - build-on-self-hosted
    if: ${{ always() && needs.probe-self-hosted.outputs.self_hosted_available == 'true' && needs.build-on-self-hosted.result == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew jar
      - name: run application
        run: java -jar build/libs/wallpaper-1.0-SNAPSHOT.jar
      - name: Commit file to github
        run: |
          git config --local user.email "gsdukbh@gmail.com"
          git config --local user.name "JiaWei Lee"
          git add images/4k_**
          git add images/bing_**
          git add index.txt
          git add *.json
          git add *.md
          git add *.db
          git add archive/*.md
          git commit -m "auto update wallpaper"
      - name: Push changes
        uses: ad-m/github-push-action@master

  deploy-hexo:
    name: Deploy Hexo to gh-pages
    needs:
      - build-on-github
      - build-on-self-hosted
      - fallback-on-self-hosted-failure
    if: ${{ always() && (needs.build-on-github.result == 'success' || needs.build-on-self-hosted.result == 'success' || needs.fallback-on-self-hosted-failure.result == 'success') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure latest main branch
        run: |
          git fetch origin main
          git checkout main
          git pull origin main
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        working-directory: site2
        run: npm install
      - name: Sync resources for Hexo
        run: |
          rsync -a --delete images/ site2/source/images/
          rsync -a --delete archive/ site2/source/archive/
      - name: Build Hexo site
        working-directory: site2
        run: npm run build
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: site2/public
          commit_message: "chore: update hexo site"
